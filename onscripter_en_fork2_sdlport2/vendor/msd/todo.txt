ret = SDL_CreateRGBSurface(SDL_SWSURFACE, fntsize.cx, fntsize.cy, 8,
																0, 0, 0, 0);
	if (ret == NULL) {
		goto trus_exit;
	}
	palette = ret->format->palette;
	palette->colors[0].r = bg.r; //bg
	palette->colors[0].g = bg.g;
	palette->colors[0].b = bg.b;
	palette->colors[1].r = fg.r;
	palette->colors[1].g = fg.g;
	palette->colors[1].b = fg.b;

	src = (BYTE *)fhdl->image;
	dst = (BYTE *)ret->pixels;
	do {
		for (x=0; x<fntsize.cx; x++) {
			dst[x] = ((src[x / 8] >> ((x ^ 7) & 7)) & 1) ? 0xff : 0;
		} //0xff;// FIXME: I don't know why (... &1) is wrong, but ((... &1) ? 0xff : 0) is right
		src += fhdl->bmpalign;
		dst += ret->pitch;
	} while(--fntsize.cy);
	
	
	
--------------------------------

SDL_BlitSurface(surface, &clip, sprite->image_surface, &clip);

SDL_FillRect( accumulation_surface, NULL, SDL_MapRGBA( accumulation_surface->format, r, g, b, 0xff) );

SDL_ConvertSurface( tmp, surface->format, SDL_SWSURFACE );

SDL_CreateRGBSurface
SDL_FreeSurface
